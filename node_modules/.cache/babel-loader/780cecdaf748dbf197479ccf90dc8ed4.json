{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Drezgone\\\\Desktop\\\\Git Hub Projekti\\\\React-zadatak-v2-0\\\\src\\\\components\\\\UserInput.jsx\";\nimport React, { useState } from \"react\";\nimport \"./UserInput.css\";\nimport { useHistory } from \"react-router-dom\";\nexport default function UserInput({\n  onLogin\n}) {\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isPopupVisible, setPopupVisible] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  function validateEmail(email) {\n    const regex = /^[^\\s@]+@[^\\s@0-9][^\\s@]*\\.[a-zA-Z]{2,}$/;\n    return regex.test(email);\n  }\n  function validatePassword(password) {\n    return password.length >= 3;\n  }\n  function handleEmailChange(e) {\n    const value = e.target.value;\n    setEmail(value);\n    setEmailError(validateEmail(value) ? \"\" : \"Please enter a valid email address\");\n  }\n  function handlePasswordChange(e) {\n    const value = e.target.value;\n    setPassword(value);\n    setPasswordError(value.length < 3 ? \"Password must be at least 3 character long\" : \"\");\n  }\n  function isFormValid() {\n    return validateEmail(email) && validatePassword(password);\n  }\n  async function handleSubmit(e) {\n    console.log(\"adgagag\");\n    e.preventDefault();\n    if (isFormValid()) {\n      setIsLoading(true); // spiner true- when request starts\n      try {\n        const response = await fetch(\"http://localhost:3001/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email,\n            password\n          })\n        });\n        setIsLoading(false); // spiner - false, when response is recived\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          setErrorMessage(errorData.message);\n          setPopupVisible(true);\n          return;\n        }\n        const data = await response.json();\n        console.log(\"Login successful with token: \", data.token);\n        // ovo izbacujemo, posto vise ne pozivamo tu funkciju u App.js\n        // onLogin(email);\n        // ova linija ispod je dodatak da bi dispatchovao neki evenet, u ovom slucaju hocemo da znamo da nam se user email update-vao da bi mogli promenuti u komponenti Header tekst sa login na logout i dodati email\n        window.dispatchEvent(new Event(\"userUpdate\"));\n        // local storage dodajemo da bi imali negde u sacuvan user email....kasnije kad krenes da radis posle logina obicno ubacuje u neki state management (Redux, ContextAPI itd)\n        localStorage.setItem(\"userEmail\", email);\n        // local storage ces koristiti bas cesto, to ti je skladistenje u memoriju kompa/browsera/telefona\n        // i onda ovamo redirektujemo usera na stranicu sa novinama\n        history.push(\"/all\");\n      } catch (error) {\n        console.error(error);\n        setIsLoading(false); // spiner - false, on error\n        setErrorMessage(\"An error occurred. Please try again.\");\n        setPopupVisible(true);\n      }\n    }\n  }\n  function dismissPopup() {\n    setPopupVisible(false);\n    setErrorMessage(\"\");\n  }\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, isPopupVisible && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, errorMessage), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: dismissPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"input-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading-spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Your email address *\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    value: email,\n    onChange: handleEmailChange,\n    placeholder: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), emailError && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 28\n    }\n  }, emailError)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Your password *\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: handlePasswordChange,\n    placeholder: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), passwordError && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, passwordError)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !isFormValid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Login\")))));\n}","map":{"version":3,"names":["React","useState","useHistory","UserInput","onLogin","email","setEmail","emailError","setEmailError","password","setPassword","passwordError","setPasswordError","errorMessage","setErrorMessage","isPopupVisible","setPopupVisible","isLoading","setIsLoading","history","validateEmail","regex","test","validatePassword","length","handleEmailChange","e","value","target","handlePasswordChange","isFormValid","handleSubmit","console","log","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","message","data","token","window","dispatchEvent","Event","localStorage","setItem","push","error","dismissPopup","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSubmit","type","onChange","placeholder","required","disabled"],"sources":["C:/Users/Drezgone/Desktop/Git Hub Projekti/React-zadatak-v2-0/src/components/UserInput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./UserInput.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function UserInput({ onLogin }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [isPopupVisible, setPopupVisible] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  function validateEmail(email) {\r\n    const regex = /^[^\\s@]+@[^\\s@0-9][^\\s@]*\\.[a-zA-Z]{2,}$/;\r\n    return regex.test(email);\r\n  }\r\n\r\n  function validatePassword(password) {\r\n    return password.length >= 3;\r\n  }\r\n\r\n  function handleEmailChange(e) {\r\n    const value = e.target.value;\r\n    setEmail(value);\r\n    setEmailError(\r\n      validateEmail(value) ? \"\" : \"Please enter a valid email address\"\r\n    );\r\n  }\r\n\r\n  function handlePasswordChange(e) {\r\n    const value = e.target.value;\r\n    setPassword(value);\r\n    setPasswordError(\r\n      value.length < 3 ? \"Password must be at least 3 character long\" : \"\"\r\n    );\r\n  }\r\n\r\n  function isFormValid() {\r\n    return validateEmail(email) && validatePassword(password);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    console.log(\"adgagag\");\r\n    e.preventDefault();\r\n    if (isFormValid()) {\r\n      setIsLoading(true); // spiner true- when request starts\r\n      try {\r\n        const response = await fetch(\"http://localhost:3001/login\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ email, password }),\r\n        });\r\n\r\n        setIsLoading(false); // spiner - false, when response is recived\r\n\r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          setErrorMessage(errorData.message);\r\n          setPopupVisible(true);\r\n          return;\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(\"Login successful with token: \", data.token);\r\n        // ovo izbacujemo, posto vise ne pozivamo tu funkciju u App.js\r\n        // onLogin(email);\r\n        // ova linija ispod je dodatak da bi dispatchovao neki evenet, u ovom slucaju hocemo da znamo da nam se user email update-vao da bi mogli promenuti u komponenti Header tekst sa login na logout i dodati email\r\n        window.dispatchEvent(new Event(\"userUpdate\"));\r\n        // local storage dodajemo da bi imali negde u sacuvan user email....kasnije kad krenes da radis posle logina obicno ubacuje u neki state management (Redux, ContextAPI itd)\r\n        localStorage.setItem(\"userEmail\", email);\r\n        // local storage ces koristiti bas cesto, to ti je skladistenje u memoriju kompa/browsera/telefona\r\n        // i onda ovamo redirektujemo usera na stranicu sa novinama\r\n        history.push(\"/all\");\r\n      } catch (error) {\r\n        console.error(error);\r\n        setIsLoading(false); // spiner - false, on error\r\n        setErrorMessage(\"An error occurred. Please try again.\");\r\n        setPopupVisible(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  function dismissPopup() {\r\n    setPopupVisible(false);\r\n    setErrorMessage(\"\");\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      {isPopupVisible && (\r\n        <div className=\"popup\">\r\n          <p>{errorMessage}</p>\r\n          <button onClick={dismissPopup}>X</button>\r\n        </div>\r\n      )}\r\n      <div className=\"input-container\">\r\n        <form className=\"input-form\" onSubmit={handleSubmit}>\r\n          {isLoading && <div className=\"loading-spinner\"></div>}\r\n          <h2>Login</h2>\r\n          <p>\r\n            <label>Your email address *</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n              placeholder=\"Email\"\r\n              required\r\n            ></input>\r\n            {emailError && <span className=\"span-error\">{emailError}</span>}\r\n          </p>\r\n          <p>\r\n            <label>Your password *</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n              placeholder=\"Password\"\r\n              required\r\n            ></input>\r\n            {passwordError && (\r\n              <span className=\"span-error\">{passwordError}</span>\r\n            )}\r\n          </p>\r\n          <div className=\"btn-container\">\r\n            <button type=\"submit\" disabled={!isFormValid()}>\r\n              Login\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}