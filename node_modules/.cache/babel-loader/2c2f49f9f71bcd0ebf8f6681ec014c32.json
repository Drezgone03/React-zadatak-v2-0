{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Drezgone\\\\Desktop\\\\Git Hub Projekti\\\\React-zadatak-v2-0\\\\src\\\\App.js\";\n// import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import Header from \"./components/Header\";\n// import UserInput from \"./components/UserInput\";\n// import SearchBar from \"./components/SearchBar\";\n// import NewsList from \"./components/NewsList\";\n\n// // import {\n// //   BrowserRouter as Router,\n// //   Route,\n// //   Routes,\n// // } from \"react-router-dom/cjs/react-router-dom.min\";\n// // import SingleNews from \"./components/SingleNews.jsx\";\n\n// function App() {\n//   const [userEmail, setUserEmail] = useState(null);\n//   const [news, setNews] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [cache, setCache] = useState({}); // Cache for search results\n\n//   // Fetch News with optional query\n//   async function fetchNews(searchQuery = \"\") {\n//     if (cache[searchQuery]) {\n//       setNews(cache[searchQuery]); // Load from cache\n//       return;\n//     }\n\n//     setLoading(true);\n//     try {\n//       const response = await fetch(\n//         `http://localhost:3001/news?search=${searchQuery}`\n//       );\n//       if (!response.ok) throw new Error(\"Failed to fetch news\");\n//       const data = await response.json();\n\n//       // Cache results and update state\n//       setCache((prevCache) => ({ ...prevCache, [searchQuery]: data }));\n//       setNews(data);\n//     } catch (error) {\n//       console.error(\"Error fetching news:\", error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   useEffect(() => {\n//     fetchNews(); // Fetch all news initially\n//   }, []);\n\n//   function handleLogin(email) {\n//     setUserEmail(email);\n//   }\n\n//   function handleLogout() {\n//     setUserEmail(null);\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <Header userEmailPropt={userEmail} onLogoutPropt={handleLogout} />\n//       {userEmail ? (\n//         <div>Welcome, {userEmail}!</div>\n//       ) : (\n//         <UserInput onLogin={handleLogin} />\n//       )}\n//       <h2>Latest News</h2>\n\n//       <SearchBar onSearch={fetchNews} />\n\n//       {loading ? (\n//         <div className=\"loading-spinner\"></div>\n//       ) : (\n//         <NewsList newsData={news} />\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n//////////////////// Verzija 2\n\n// import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import Header from \"./components/Header.jsx\";\n// import UserInput from \"./components/UserInput.jsx\";\n// import SearchBar from \"./components/SearchBar.jsx\";\n// import NewsList from \"./components/NewsList.jsx\";\n\n// // dodao\n// import SingleNews from \"./components/SingleNews.jsx\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// import { useNavigate } from \"react-router-dom\";\n// const navigate = useNavigate();\n\n// function App() {\n//   const [userEmail, setUserEmail] = useState(null);\n//   const [news, setNews] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [cache, setCache] = useState({}); // Cache for search results\n\n//   // Fetch News with optional query\n//   async function fetchNews(searchQuery = \"\") {\n//     if (cache[searchQuery]) {\n//       setNews(cache[searchQuery]); // Load from cache\n//       return;\n//     }\n\n//     setLoading(true);\n//     try {\n//       const response = await fetch(\n//         `http://localhost:3001/news?search=${searchQuery}`\n//       );\n//       if (!response.ok) throw new Error(\"Failed to fetch news\");\n//       const data = await response.json();\n\n//       // Cache results and update state\n//       setCache((prevCache) => ({ ...prevCache, [searchQuery]: data }));\n//       setNews(data);\n//     } catch (error) {\n//       console.error(\"Error fetching news:\", error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   useEffect(() => {\n//     if (userEmail) {\n//       console.log(\"----\");\n//       fetchNews();\n//     }\n//   }, [userEmail]);\n\n//   function handleLogin(email) {\n//     setUserEmail(email);\n//   }\n\n//   function handleLogout() {\n//     setUserEmail(null);\n//   }\n\n//   function handleSingleNews(id) {\n//     console.log(\"id\", id);\n//     navigate(`/${id}`);\n//   }\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Header userEmailProp={userEmail} onLogoutProp={handleLogout} />\n\n//         {/* Display welcome message or login input */}\n\n//         {userEmail ? (\n//           <div> Welcome, {userEmail}! </div>\n//         ) : (\n//           <UserInput onLogin={handleLogin} />\n//         )}\n\n//         {/* Conditional rendering based on user login */}\n\n//         {userEmail && (\n//           <>\n//             <h2>Latest News</h2>\n//             <SearchBar onSearch={fetchNews} />\n//             {loading ? (\n//               <div className=\"loading-spinner\"></div>\n//             ) : (\n//               <NewsList newsData={news} handleSingleNews={handleSingleNews} />\n//             )}\n//           </>\n//         )}\n\n//         {/* Define application routes */}\n//         <Routes>\n//           <Route path=\"/\" element={<UserInput />} />\n//           <Route path=\"/:newsId\" element={<SingleNews />} />\n//           <Route path=\"/all\" element={NewsList} />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header.jsx\";\nimport UserInput from \"./components/UserInput.jsx\";\nimport NewsList from \"./components/NewsList.jsx\";\nimport SingleNews from \"./components/SingleNews.jsx\";\nfunction App() {\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: UserInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/all\",\n    component: NewsList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/:newsId\",\n    component: SingleNews,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }))));\n}\nexport default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Switch","Header","UserInput","NewsList","SingleNews","App","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","exact","path","component"],"sources":["C:/Users/Drezgone/Desktop/Git Hub Projekti/React-zadatak-v2-0/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import \"./App.css\";\r\n// import Header from \"./components/Header\";\r\n// import UserInput from \"./components/UserInput\";\r\n// import SearchBar from \"./components/SearchBar\";\r\n// import NewsList from \"./components/NewsList\";\r\n\r\n// // import {\r\n// //   BrowserRouter as Router,\r\n// //   Route,\r\n// //   Routes,\r\n// // } from \"react-router-dom/cjs/react-router-dom.min\";\r\n// // import SingleNews from \"./components/SingleNews.jsx\";\r\n\r\n// function App() {\r\n//   const [userEmail, setUserEmail] = useState(null);\r\n//   const [news, setNews] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [cache, setCache] = useState({}); // Cache for search results\r\n\r\n//   // Fetch News with optional query\r\n//   async function fetchNews(searchQuery = \"\") {\r\n//     if (cache[searchQuery]) {\r\n//       setNews(cache[searchQuery]); // Load from cache\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     try {\r\n//       const response = await fetch(\r\n//         `http://localhost:3001/news?search=${searchQuery}`\r\n//       );\r\n//       if (!response.ok) throw new Error(\"Failed to fetch news\");\r\n//       const data = await response.json();\r\n\r\n//       // Cache results and update state\r\n//       setCache((prevCache) => ({ ...prevCache, [searchQuery]: data }));\r\n//       setNews(data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching news:\", error);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     fetchNews(); // Fetch all news initially\r\n//   }, []);\r\n\r\n//   function handleLogin(email) {\r\n//     setUserEmail(email);\r\n//   }\r\n\r\n//   function handleLogout() {\r\n//     setUserEmail(null);\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Header userEmailPropt={userEmail} onLogoutPropt={handleLogout} />\r\n//       {userEmail ? (\r\n//         <div>Welcome, {userEmail}!</div>\r\n//       ) : (\r\n//         <UserInput onLogin={handleLogin} />\r\n//       )}\r\n//       <h2>Latest News</h2>\r\n\r\n//       <SearchBar onSearch={fetchNews} />\r\n\r\n//       {loading ? (\r\n//         <div className=\"loading-spinner\"></div>\r\n//       ) : (\r\n//         <NewsList newsData={news} />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n//////////////////// Verzija 2\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import \"./App.css\";\r\n// import Header from \"./components/Header.jsx\";\r\n// import UserInput from \"./components/UserInput.jsx\";\r\n// import SearchBar from \"./components/SearchBar.jsx\";\r\n// import NewsList from \"./components/NewsList.jsx\";\r\n\r\n// // dodao\r\n// import SingleNews from \"./components/SingleNews.jsx\";\r\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// const navigate = useNavigate();\r\n\r\n// function App() {\r\n//   const [userEmail, setUserEmail] = useState(null);\r\n//   const [news, setNews] = useState([]);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [cache, setCache] = useState({}); // Cache for search results\r\n\r\n//   // Fetch News with optional query\r\n//   async function fetchNews(searchQuery = \"\") {\r\n//     if (cache[searchQuery]) {\r\n//       setNews(cache[searchQuery]); // Load from cache\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     try {\r\n//       const response = await fetch(\r\n//         `http://localhost:3001/news?search=${searchQuery}`\r\n//       );\r\n//       if (!response.ok) throw new Error(\"Failed to fetch news\");\r\n//       const data = await response.json();\r\n\r\n//       // Cache results and update state\r\n//       setCache((prevCache) => ({ ...prevCache, [searchQuery]: data }));\r\n//       setNews(data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching news:\", error);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     if (userEmail) {\r\n//       console.log(\"----\");\r\n//       fetchNews();\r\n//     }\r\n//   }, [userEmail]);\r\n\r\n//   function handleLogin(email) {\r\n//     setUserEmail(email);\r\n//   }\r\n\r\n//   function handleLogout() {\r\n//     setUserEmail(null);\r\n//   }\r\n\r\n//   function handleSingleNews(id) {\r\n//     console.log(\"id\", id);\r\n//     navigate(`/${id}`);\r\n//   }\r\n\r\n//   return (\r\n//     <Router>\r\n//       <div className=\"App\">\r\n//         <Header userEmailProp={userEmail} onLogoutProp={handleLogout} />\r\n\r\n//         {/* Display welcome message or login input */}\r\n\r\n//         {userEmail ? (\r\n//           <div> Welcome, {userEmail}! </div>\r\n//         ) : (\r\n//           <UserInput onLogin={handleLogin} />\r\n//         )}\r\n\r\n//         {/* Conditional rendering based on user login */}\r\n\r\n//         {userEmail && (\r\n//           <>\r\n//             <h2>Latest News</h2>\r\n//             <SearchBar onSearch={fetchNews} />\r\n//             {loading ? (\r\n//               <div className=\"loading-spinner\"></div>\r\n//             ) : (\r\n//               <NewsList newsData={news} handleSingleNews={handleSingleNews} />\r\n//             )}\r\n//           </>\r\n//         )}\r\n\r\n//         {/* Define application routes */}\r\n//         <Routes>\r\n//           <Route path=\"/\" element={<UserInput />} />\r\n//           <Route path=\"/:newsId\" element={<SingleNews />} />\r\n//           <Route path=\"/all\" element={NewsList} />\r\n//         </Routes>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header.jsx\";\r\nimport UserInput from \"./components/UserInput.jsx\";\r\nimport NewsList from \"./components/NewsList.jsx\";\r\nimport SingleNews from \"./components/SingleNews.jsx\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={UserInput} />\r\n          <Route path=\"/all\" component={NewsList} />\r\n          <Route path=\"/:newsId\" component={SingleNews} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,UAAU,MAAM,6BAA6B;AAEpD,SAASC,GAAGA,CAAA,EAAG;EACb,oBACET,KAAA,CAAAU,aAAA,CAACR,MAAM;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACLhB,KAAA,CAAAU,aAAA;IAAKO,SAAS,EAAC,KAAK;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClBhB,KAAA,CAAAU,aAAA,CAACL,MAAM;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACVhB,KAAA,CAAAU,aAAA,CAACN,MAAM;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACLhB,KAAA,CAAAU,aAAA,CAACP,KAAK;IAACe,KAAK;IAACC,IAAI,EAAC,GAAG;IAACC,SAAS,EAAEd,SAAU;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC9ChB,KAAA,CAAAU,aAAA,CAACP,KAAK;IAACgB,IAAI,EAAC,MAAM;IAACC,SAAS,EAAEb,QAAS;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC1ChB,KAAA,CAAAU,aAAA,CAACP,KAAK;IAACgB,IAAI,EAAC,UAAU;IAACC,SAAS,EAAEZ,UAAW;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACzC,CACL,CACC,CAAC;AAEb;AAEA,eAAeP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}